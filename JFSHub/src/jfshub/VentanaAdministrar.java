package jfshub;

import java.awt.Image;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import net.kronos.rkon.core.Rcon;

/**
 *
 * @author Crhistian C
 */
public class VentanaAdministrar extends javax.swing.JFrame {

    Rcon rcon;

    /**
     * Creates new form VentanaAdministrar
     */
    public VentanaAdministrar() {
        initComponents();
        conectarRcon();
        propiedadesJFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();
        txtComando = new javax.swing.JTextField();
        btEnviar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comandos = new javax.swing.JComboBox<>();
        bLimpiar = new javax.swing.JButton();
        btInsertar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        txtConsola.setEditable(false);
        txtConsola.setColumns(20);
        txtConsola.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        txtConsola.setRows(5);
        jScrollPane1.setViewportView(txtConsola);

        txtComando.setToolTipText("");
        txtComando.setName(""); // NOI18N
        txtComando.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtComandoKeyPressed(evt);
            }
        });

        btEnviar.setText("Enviar");
        btEnviar.setSelected(true);
        btEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarActionPerformed(evt);
            }
        });

        jLabel1.setText("Consola");

        comandos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "say", "tp", "stop", "mv list" }));
        comandos.setToolTipText("");

        bLimpiar.setText("Limpiar");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        btInsertar.setText("Insertar");
        btInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bLimpiar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comandos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btInsertar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComando, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEnviar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtComando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEnviar)
                    .addComponent(comandos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btInsertar))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarActionPerformed
        try {
            txtConsola.append(rcon.command(txtComando.getText()) + "\n");
        } catch (Exception e) {
            System.out.println("Error: " + e);
            txtConsola.append("Intento de reconexión.\n");
            conectarRcon();
        }

    }//GEN-LAST:event_btEnviarActionPerformed


    private void btInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertarActionPerformed
        switch (comandos.getSelectedItem().toString()) {
            case "say":
                txtComando.setText("say <Mensaje>");
                break;
            case "tp":
                txtComando.setText("tp <quién|@a> <destino|coordenadas>");
                break;
            case "stop":
                txtComando.setText("stop /*pararás el servidor*/");
                break;
            case "mv list":
                txtComando.setText("mv list");
                break;

        }
    }//GEN-LAST:event_btInsertarActionPerformed

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        txtConsola.append("Se limpió la consola.\n");
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void txtComandoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComandoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btEnviarActionPerformed(null);
        }
    }//GEN-LAST:event_txtComandoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAdministrar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton btEnviar;
    private javax.swing.JButton btInsertar;
    private javax.swing.JComboBox<String> comandos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtComando;
    private javax.swing.JTextArea txtConsola;
    // End of variables declaration//GEN-END:variables
    private void propiedadesJFrame() {
        ImageIcon img = new ImageIcon(JFSHub.class.getResource("images/icono1.png"));
        setIconImage(img.getImage().getScaledInstance(14, 15, Image.SCALE_DEFAULT));

        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("[JFS Hub] " + Datos.get(Datos.DataCode.NOMBRE));
        setVisible(true);
    }

    private void conectarRcon() {
        try {
            rcon = new Rcon("192.168.0.219", 24036, "Lamamademena".getBytes());
            //Ensenar confirmacion de conexiôn en consola//
            txtConsola.append("¡Conexión exitosa con el servidor!\n");
        } catch (Exception e) {
            System.out.println("Error: " + e);
            txtConsola.append("No se pudo conectar con el servidor.\n"
                    + "Intenta enviar un comando para reintentar conectar.");
        }

    }
}
